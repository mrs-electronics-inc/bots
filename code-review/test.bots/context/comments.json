[
  {
    "username": "github-actions[bot]",
    "timestamp": "2025-08-28T19:25:24Z",
    "body": "# Changes Requested\n- PR title format\n  - As the scope portion is NOT required in the PR title, the current title `feat: collect json context` is acceptable under conventional commit style without needing a scope. No change needed.\n\n- Missing Changelog Entry\n  - Please add an entry to `CHANGELOG.md` describing the changes made in this pull request as required by `.bots/instructions.md`.\n\n- Non-serializable object saved to JSON in `collect_context.py`\n  - On line 67, `content` holds a `subprocess.CompletedProcess` object which is not JSON serializable. Only its stdout should be stored.\n  - Suggestion: Change line 67 from `file_contents[file_path] = content` to `file_contents[file_path] = content.stdout`.\n\n- Typo in `code-review/collect_context.py`\n  - Correct the typo from `filed` to `field` in the inline comment above line 67 within `collect_file_contents()` function.\n  \n- Typo in `code-review/system-prompts/review.md`\n  - On line 11, correct the typo `filed` to `field` in the phrase \"included in your context in the `selected_current_files` filed\".\n\n\n\n## Summary of Changes\n- Added a new Python script (`collect_context.py`) to collect code review context (details, comments, diffs, and file contents) in JSON format.\n- Updated `collect_context.sh` to generate structured JSON outputs for MR/PR details and comments, and to invoke the new Python script.\n- Modified `generate_llm_review.py` and `generate_llm_review.sh` to consume the new JSON context file (`.bots/context.json`) instead of the old markdown version.\n- Bumped the code-review Docker image tag in workflow configuration.\n- Adjusted instructions in `system-prompts/review.md` and `.bots/instructions.md` to reflect the new JSON-based context and clarify PR title conventions.\n\n\n\n## Overall Feedback\nThis PR modernizes the context collection by transitioning from markdown to structured JSON, which is a solid architectural improvement! üéØ @Pertempto. The introduction of `collect_context.py` centralizes the logic nicely üëç. However, there are some important issues regarding correctness (like storing a non-serializable object), adherence to repository conventions (missing changelog), and a couple minor typos that need to be addressed. Also, please double check the GLab CLI usage in `collect_context.sh`. Once these items are resolved, this will be a great enhancement! üí™\n\n\n\n",
    "id": 3234686262
  }
]
